[versions]
coroutines = "1.10.2"
detekt = "1.23.8"          # waiting for a release with a fix for https://github.com/detekt/detekt/issues/7634
dokkatoo = "2.4.0"
hoplite = "2.9.0"
jackson = "2.19.0"
jimfs = "1.3.0"
junit = "5.12.2"
kotlin = "2.1.20"
kotlinBcv = "0.17.0"
ktor = "3.1.2"
logback = "1.5.18"
mockk = "1.14.0"
nodeGradle = "7.1.0"
slf4j = "2.0.17"
versions = "0.52.0"
licenserPlugin = "2.0.0"
swaggerCore = "2.2.30"
swaggerUi = "5.21.0"
clikt = "5.0.3"
exposed = "0.61.0"
kotlinPoet = "2.1.0"
sqlite = "3.49.1.0"
testcontainers = "1.21.0"
postgresql = "42.7.5"
mysql = "9.2.0"
lang3 = "3.17.0"
shadow = "8.3.6"

[libraries]
# Dependencies

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-scripting-common = { module = "org.jetbrains.kotlin:kotlin-scripting-common", version.ref = "kotlin" }
kotlin-scripting-jvm = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm", version.ref = "kotlin" }
kotlin-scripting-jvmHost = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm-host", version.ref = "kotlin" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-host = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-test = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }

ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }

jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-time = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-dataformats-toml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-toml", version.ref = "jackson" }
jackson-dataformats-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }

hoplite-json = { module = "com.sksamuel.hoplite:hoplite-json", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
hoplite-toml = { module = "com.sksamuel.hoplite:hoplite-toml", version.ref = "hoplite" }

jimfs = { module = "com.google.jimfs:jimfs", version.ref = "jimfs" }

slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

swaggerCore-models = { module = "io.swagger.core.v3:swagger-models", version.ref = "swaggerCore" }
swaggerCore-core = { module = "io.swagger.core.v3:swagger-core", version.ref = "swaggerCore" }
swaggerUi = { module = "org.webjars:swagger-ui", version.ref = "swaggerUi" }

clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-javatime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }

kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }

sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqlite" }

# Test dependencies

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
mockk = { module = "io.mockk:mockk-jvm", version.ref = "mockk" }

junit-jupiterApi = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiterEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

# Detekt plugins

detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

sqlDrivers-mysql = { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }
sqlDrivers-postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }

commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "lang3" }

[plugins]

kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dokkatoo = { id = "dev.adamko.dokkatoo", version.ref = "dokkatoo" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
kotlinBcv = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinBcv" }
nodeGradle = { id = "com.github.node-gradle.node", version.ref = "nodeGradle" }
licenser = { id = "dev.yumi.gradle.licenser", version.ref = "licenserPlugin" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }
